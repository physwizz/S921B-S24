/*
 * Samsung Exynos5 SoC series Sensor driver
 *
 *
 * Copyright (c) 2011 Samsung Electronics Co., Ltd
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef IS_CIS_4HA_SET_A_H
#define IS_CIS_4HA_SET_A_H

#include "is-cis.h"
#include "is-cis-4ha.h"

/* Reference : 4HA_EVT00_Setfile_������_REV10.xlsx */

const u32 sensor_4ha_setfile_A_Global[] = {
	0x0100, 0x00, 0x01,
	0x0A02, 0x7F, 0x01,
	0x3B45, 0x01, 0x01,
	0x3264, 0x01, 0x01,
	0x3290, 0x10, 0x01,
	0x0B05, 0x01, 0x01,
	0x3069, 0xC7, 0x01,
	0x3074, 0x06, 0x01,
	0x3075, 0x32, 0x01,
	0x3068, 0xF7, 0x01,
	0x30C6, 0x01, 0x01,
	0x301F, 0x20, 0x01,
	0x306B, 0x9A, 0x01,
	0x3091, 0x1F, 0x01,
	0x306E, 0x71, 0x01,
	0x306F, 0x28, 0x01,
	0x306D, 0x08, 0x01,
	0x3084, 0x16, 0x01,
	0x3070, 0x0F, 0x01,
	0x306A, 0x79, 0x01,
	0x30B0, 0xFF, 0x01,
	0x30C2, 0x05, 0x01,
	0x30C4, 0x06, 0x01,
	0x3081, 0x07, 0x01,
	0x307B, 0x85, 0x01,
	0x307A, 0x0A, 0x01,
	0x3079, 0x0A, 0x01,
	0x308A, 0x20, 0x01,
	0x308B, 0x08, 0x01,
	0x308C, 0x0B, 0x01,
	0x392F, 0x01, 0x01,
	0x3930, 0x00, 0x01,
	0x3924, 0x7F, 0x01,
	0x3925, 0xFD, 0x01,
	0x3C08, 0xFF, 0x01,
	0x3C09, 0xFF, 0x01,
	0x3C31, 0xFF, 0x01,
	0x3C32, 0xFF, 0x01,
};

const u32 sensor_4ha_setfile_A_dualsync_Slave[] = {
	0x0100, 0x00, 0x01,
	IXC_MODE_DELAY, 50000, 0x00, /* delay 1 frame time */
	0x3C02, 0x01, 0x01,
	0x3C05, 0x7D, 0x01,
	0x3500, 0x03, 0x01,
	0x3501, 0x00, 0x01,
	0x3503, 0x28, 0x01,
};

const u32 sensor_4ha_setfile_A_dualsync_Master[] = {
	0x0100, 0x00, 0x01,
	IXC_MODE_DELAY, 50000, 0x00, /* delay  1 frame time */
	0x3C03, 0x7D, 0x01,
	0x3C05, 0x7F, 0x01,
	0x3C02, 0x10, 0x01,
};


/* 26M_2Lane */
/* 16x10 margin, EXTCLK 26Mhz */
const u32 sensor_4ha_setfile_A_3104x2326_24fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6B, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xBC, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x09, 0x01,
	0x0341, 0x47, 0x01,
	0x0342, 0x13, 0x01,
	0x0343, 0x10, 0x01,
	0x0344, 0x00, 0x01,
	0x0345, 0x58, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x44, 0x01,
	0x0348, 0x0C, 0x01,
	0x0349, 0x77, 0x01,
	0x034A, 0x09, 0x01,
	0x034B, 0x59, 0x01,
	0x034C, 0x0C, 0x01,
	0x034D, 0x20, 0x01,
	0x034E, 0x09, 0x01,
	0x034F, 0x16, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x00, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x12, 0x01,
	0x0201, 0x80, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x03, 0x01,
	0x0821, 0xD1, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x01, 0x01,
	0x3929, 0x27, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

/* 16x10 margin, EXTCLK 26Mhz */
const u32 sensor_4ha_setfile_A_2744x2056_30fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6B, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xBC, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x08, 0x01,
	0x0341, 0x5A, 0x01,
	0x0342, 0x10, 0x01,
	0x0343, 0xF0, 0x01,
	0x0344, 0x01, 0x01,
	0x0345, 0x0C, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0xCC, 0x01,
	0x0348, 0x0B, 0x01,
	0x0349, 0xC3, 0x01,
	0x034A, 0x08, 0x01,
	0x034B, 0xD3, 0x01,
	0x034C, 0x0A, 0x01,
	0x034D, 0xB8, 0x01,
	0x034E, 0x08, 0x01,
	0x034F, 0x08, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x00, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x10, 0x01,
	0x0201, 0x60, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x03, 0x01,
	0x0821, 0xD1, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x01, 0x01,
	0x3929, 0x27, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

/* 16x10 margin, EXTCLK 26Mhz */
const u32 sensor_4ha_setfile_A_3104x1746_24fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6B, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xBC, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x09, 0x01,
	0x0341, 0x40, 0x01,
	0x0342, 0x13, 0x01,
	0x0343, 0x10, 0x01,
	0x0344, 0x00, 0x01,
	0x0345, 0x58, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0x66, 0x01,
	0x0348, 0x0C, 0x01,
	0x0349, 0x77, 0x01,
	0x034A, 0x08, 0x01,
	0x034B, 0x37, 0x01,
	0x034C, 0x0C, 0x01,
	0x034D, 0x20, 0x01,
	0x034E, 0x06, 0x01,
	0x034F, 0xD2, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x00, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x12, 0x01,
	0x0201, 0x80, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x03, 0x01,
	0x0821, 0xD1, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x01, 0x01,
	0x3929, 0x27, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

/* 16x10 margin, EXTCLK 26Mhz */
const u32 sensor_4ha_setfile_A_3104x1746_30fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6B, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xBC, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x07, 0x01,
	0x0341, 0x6A, 0x01,
	0x0342, 0x13, 0x01,
	0x0343, 0x10, 0x01,
	0x0344, 0x00, 0x01,
	0x0345, 0x58, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0x66, 0x01,
	0x0348, 0x0C, 0x01,
	0x0349, 0x77, 0x01,
	0x034A, 0x08, 0x01,
	0x034B, 0x37, 0x01,
	0x034C, 0x0C, 0x01,
	0x034D, 0x20, 0x01,
	0x034E, 0x06, 0x01,
	0x034F, 0xD2, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x00, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x12, 0x01,
	0x0201, 0x80, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x03, 0x01,
	0x0821, 0xD1, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x01, 0x01,
	0x3929, 0x27, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

/* 16x10 margin, EXTCLK 26Mhz */
const u32 sensor_4ha_setfile_A_3104x1472_24fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6B, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xBC, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x09, 0x01,
	0x0341, 0x40, 0x01,
	0x0342, 0x13, 0x01,
	0x0343, 0x10, 0x01,
	0x0344, 0x00, 0x01,
	0x0345, 0x58, 0x01,
	0x0346, 0x01, 0x01,
	0x0347, 0xF0, 0x01,
	0x0348, 0x0C, 0x01,
	0x0349, 0x77, 0x01,
	0x034A, 0x07, 0x01,
	0x034B, 0xAF, 0x01,
	0x034C, 0x0C, 0x01,
	0x034D, 0x20, 0x01,
	0x034E, 0x05, 0x01,
	0x034F, 0xC0, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x00, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x12, 0x01,
	0x0201, 0x80, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x03, 0x01,
	0x0821, 0xD1, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x01, 0x01,
	0x3929, 0x27, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

/* 16x10 margin, EXTCLK 26Mhz */
const u32 sensor_4ha_setfile_A_2328x2328_24fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6B, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xBC, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x09, 0x01,
	0x0341, 0x40, 0x01,
	0x0342, 0x13, 0x01,
	0x0343, 0x10, 0x01,
	0x0344, 0x01, 0x01,
	0x0345, 0xDC, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x44, 0x01,
	0x0348, 0x0A, 0x01,
	0x0349, 0xF3, 0x01,
	0x034A, 0x09, 0x01,
	0x034B, 0x5B, 0x01,
	0x034C, 0x09, 0x01,
	0x034D, 0x18, 0x01,
	0x034E, 0x09, 0x01,
	0x034F, 0x18, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x01, 0x01,
	0x0900, 0x00, 0x01,
	0x0901, 0x00, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x12, 0x01,
	0x0201, 0x80, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x03, 0x01,
	0x0821, 0xD1, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x01, 0x01,
	0x3929, 0x27, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

const u32 sensor_4ha_setfile_A_768x576_120fps[] = {
	0x0136, 0x1A, 0x01,
	0x0137, 0x00, 0x01,
	0x0301, 0x04, 0x01,
	0x0305, 0x05, 0x01,
	0x0306, 0x00, 0x01,
	0x0307, 0x6B, 0x01,
	0x3C1F, 0x00, 0x01,
	0x030D, 0x05, 0x01,
	0x030E, 0x00, 0x01,
	0x030F, 0xBC, 0x01,
	0x3C17, 0x00, 0x01,
	0x0340, 0x02, 0x01,
	0x0341, 0x74, 0x01,
	0x0342, 0x0E, 0x01,
	0x0343, 0x68, 0x01,
	0x0344, 0x00, 0x01,
	0x0345, 0x68, 0x01,
	0x0346, 0x00, 0x01,
	0x0347, 0x50, 0x01,
	0x0348, 0x0C, 0x01,
	0x0349, 0x67, 0x01,
	0x034A, 0x09, 0x01,
	0x034B, 0x4F, 0x01,
	0x034C, 0x03, 0x01,
	0x034D, 0x00, 0x01,
	0x034E, 0x02, 0x01,
	0x034F, 0x40, 0x01,
	0x0381, 0x01, 0x01,
	0x0383, 0x01, 0x01,
	0x0385, 0x01, 0x01,
	0x0387, 0x07, 0x01,
	0x0900, 0x01, 0x01,
	0x0901, 0x44, 0x01,
	0x0204, 0x00, 0x01,
	0x0205, 0x20, 0x01,
	0x0200, 0x0D, 0x01,
	0x0201, 0xD8, 0x01,
	0x0202, 0x00, 0x01,
	0x0203, 0x02, 0x01,
	0x0820, 0x03, 0x01,
	0x0821, 0xD1, 0x01,
	0x0822, 0x00, 0x01,
	0x0823, 0x00, 0x01,
	0x0112, 0x0A, 0x01,
	0x0113, 0x0A, 0x01,
	0x0114, 0x01, 0x01,
	0x3929, 0x27, 0x01,
	0x0101, 0x00, 0x01,
	0x3941, 0x0F, 0x01,
	0x3942, 0x3D, 0x01,
};

const struct sensor_pll_info_compact sensor_4ha_pllinfo_A_3104x2326_24fps = {
	EXT_CLK_Mhz * 1000 * 1000,	/* ext_clk */
	977000000ULL,			/* mipi_datarate = OPSYCK */
	278200000ULL,			/* VT picxel clk */
	2375,				/* frame_length_lines */
	4880,				/* line_length_pck */
};

const struct sensor_pll_info_compact sensor_4ha_pllinfo_A_2744x2056_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,	/* ext_clk */
	977000000ULL,			/* mipi_datarate = OPSYCK */
	278200000ULL,			/* VT picxel clk */
	2138,				/* frame_length_lines */
	4336,				/* line_length_pck */
};

const struct sensor_pll_info_compact sensor_4ha_pllinfo_A_3104x1746_24fps = {
	EXT_CLK_Mhz * 1000 * 1000,	/* ext_clk */
	977000000ULL,			/* mipi_datarate = OPSYCK */
	278200000ULL,			/* VT picxel clk */
	2368,				/* frame_length_lines */
	4880,				/* line_length_pck */
};

const struct sensor_pll_info_compact sensor_4ha_pllinfo_A_3104x1746_30fps = {
	EXT_CLK_Mhz * 1000 * 1000,	/* ext_clk */
	977000000ULL,			/* mipi_datarate = OPSYCK */
	278200000ULL,			/* VT picxel clk */
	1898,				/* frame_length_lines */
	4880,				/* line_length_pck */
};

const struct sensor_pll_info_compact sensor_4ha_pllinfo_A_3104x1472_24fps = {
	EXT_CLK_Mhz * 1000 * 1000,	/* ext_clk */
	977000000ULL,			/* mipi_datarate = OPSYCK */
	278200000ULL,			/* VT picxel clk */
	2368,				/* frame_length_lines */
	4880,				/* line_length_pck */
};

const struct sensor_pll_info_compact sensor_4ha_pllinfo_A_2328x2328_24fps = {
	EXT_CLK_Mhz * 1000 * 1000,	/* ext_clk */
	977000000ULL,			/* mipi_datarate = OPSYCK */
	278200000ULL,			/* VT picxel clk */
	2368,				/* frame_length_lines */
	4880,				/* line_length_pck */
};

const struct sensor_pll_info_compact sensor_4ha_pllinfo_A_768x576_120fps = {
	EXT_CLK_Mhz * 1000 * 1000,	/* ext_clk */
	977000000ULL,			/* mipi_datarate = OPSYCK */
	278200000ULL,			/* VT picxel clk */
	628,				/* frame_length_lines */
	3688,				/* line_length_pck */
};

static const u32 *sensor_4ha_setfiles_A[] = {
	/* 16x10 margin */
	sensor_4ha_setfile_A_3104x2326_24fps,
	sensor_4ha_setfile_A_2744x2056_30fps,
	sensor_4ha_setfile_A_3104x1746_24fps,
	sensor_4ha_setfile_A_3104x1746_30fps,
	sensor_4ha_setfile_A_3104x1472_24fps,
	sensor_4ha_setfile_A_2328x2328_24fps,
	sensor_4ha_setfile_A_768x576_120fps,
};

static const u32 sensor_4ha_setfile_A_sizes[] = {
	/* 16x10 margin */
	sizeof(sensor_4ha_setfile_A_3104x2326_24fps) / sizeof(sensor_4ha_setfile_A_3104x2326_24fps[0]),
	sizeof(sensor_4ha_setfile_A_2744x2056_30fps) / sizeof(sensor_4ha_setfile_A_2744x2056_30fps[0]),
	sizeof(sensor_4ha_setfile_A_3104x1746_24fps) / sizeof(sensor_4ha_setfile_A_3104x1746_24fps[0]),
	sizeof(sensor_4ha_setfile_A_3104x1746_30fps) / sizeof(sensor_4ha_setfile_A_3104x1746_30fps[0]),
	sizeof(sensor_4ha_setfile_A_3104x1472_24fps) / sizeof(sensor_4ha_setfile_A_3104x1472_24fps[0]),
	sizeof(sensor_4ha_setfile_A_2328x2328_24fps) / sizeof(sensor_4ha_setfile_A_2328x2328_24fps[0]),
	sizeof(sensor_4ha_setfile_A_768x576_120fps) / sizeof(sensor_4ha_setfile_A_768x576_120fps[0]),
};

static const struct sensor_pll_info_compact *sensor_4ha_pllinfos_A[] = {
	/* 16x10 margin */
	&sensor_4ha_pllinfo_A_3104x2326_24fps,
	&sensor_4ha_pllinfo_A_2744x2056_30fps,
	&sensor_4ha_pllinfo_A_3104x1746_24fps,
	&sensor_4ha_pllinfo_A_3104x1746_30fps,
	&sensor_4ha_pllinfo_A_3104x1472_24fps,
	&sensor_4ha_pllinfo_A_2328x2328_24fps,
	&sensor_4ha_pllinfo_A_768x576_120fps,
};

/* merge into sensor driver */
enum {
	CAM_4HA_SET_A_FULL_DEFAULT_MIPI_CLOCK = 0, /* Default - mipi clock = 903.5  Mhz, mipi rate = 1807 Mhz */
	CAM_4HA_SET_A_FULL_488_MHZ = 0,	/* mipi clock = 903.5  Mhz, mipi rate = 1807 Mhz */
	CAM_4HA_SET_A_FULL_496_MHZ = 1,	/* mipi clock = 897    Mhz, mipi rate = 1794 Mhz */
	CAM_4HA_SET_A_FULL_499_MHZ = 2,	/* mipi clock = 906.75 Mhz, mipi rate = 1814 Mhz */
};

static const u32 sensor_4ha_setfile_A_mipi_FULL_488_mhz[] = {
	0x030F, 0xBC, 0x01,
	0x0821, 0xD1, 0x01,
};

static const u32 sensor_4ha_setfile_A_mipi_FULL_496_mhz[] = {
	0x030F, 0xBF, 0x01,
	0x0821, 0xE1, 0x01,
};

static const u32 sensor_4ha_setfile_A_mipi_FULL_499_mhz[] = {
	0x030F, 0xC0, 0x01,
	0x0821, 0xE6, 0x01,
};

static const struct cam_mipi_setting sensor_4ha_setfile_A_mipi_setting_FULL[] = {
	{ "488 Mhz", 977,
	  sensor_4ha_setfile_A_mipi_FULL_488_mhz, ARRAY_SIZE(sensor_4ha_setfile_A_mipi_FULL_488_mhz) },
	{ "496 Mhz", 993,
	  sensor_4ha_setfile_A_mipi_FULL_496_mhz, ARRAY_SIZE(sensor_4ha_setfile_A_mipi_FULL_496_mhz) },
	{ "499 Mhz", 998,
	  sensor_4ha_setfile_A_mipi_FULL_499_mhz, ARRAY_SIZE(sensor_4ha_setfile_A_mipi_FULL_499_mhz) },
};


/* must be sorted. if not, trigger panic in is_vendor_verify_mipi_channel */

/* structure for only verifying channel list. to prevent redundant checking */
const int sensor_4ha_setfile_A_verify_sensor_mode[] = {
	SENSOR_4HA_3104X2326_24FPS, /* sensor_4ha_setfile_A_mipi_channel_FULL */
};

#endif
